apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    compose.cmd: docker-compose
    compose.version: 1.31.2
  labels:
    io.compose.service: flou-job-api
  name: flou-job-api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.compose.service: flou-job-api
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        compose.cmd: docker-compose
        compose.version: 1.31.2
      labels:
        io.compose.network/kafka-network: "true"
        io.compose.service: flou-job-api
    spec:
      containers:
        - env:
            - name: EMAIL
              value: noreply2abc@gmail.com
            - name: EMAIL_PASSWORD
              value: bvndqkcaanuadawy
            - name: KAFKA_BROKER_HOST
              value: kafka
            - name: KAFKA_BROKER_PORT
              value: "9092"
            - name: KAFKA_TOPICS
              value: yogeshs,flou.project.processing,flou.file.parsing,flou.workflow.processing
            - name: NODE_ENV
              value: development
            - name: PORT
              value: "3800"
            - name: RAZORPAY_KEY_ID
              value: rzp_test_XwJiRaw9kPNhQt
            - name: RAZORPAY_KEY_SECRET
              value: Rx1GoufJ4S0CgVvAqmO65HgZ
            - name: SECRET_KEY
              value: Analyzer@7081#
            - name: USE_HTTPS
              value: "false"
          image: flou-job-api:latest
          name: flou-job-api
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3800
              hostPort: 3800
              protocol: TCP
            - containerPort: 9229
              hostPort: 9229
              protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: "512Mi"
            requests:
              cpu: "0.5"
              memory: "256Mi"
          volumeMounts:
            - mountPath: /usr/app/dist/certificates
              name: shared-volume
              readOnly: true
      hostname: flou-job-api
      restartPolicy: Always
      volumes:
        - name: shared-volume
          persistentVolumeClaim:
            claimName: shared-volume
            readOnly: true
status: {}
