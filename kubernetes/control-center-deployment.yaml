apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    compose.cmd: docker-compose-services
    compose.version: 1.31.2
  labels:
    io.compose.service: control-center
  name: control-center
spec:
  replicas: 1
  selector:
    matchLabels:
      io.compose.service: control-center
  strategy: {}
  template:
    metadata:
      annotations:
        compose.cmd: docker-compose-services
        compose.version: 1.31.2
      labels:
        io.compose.network/kafka-network: "true"
        io.compose.service: control-center
    spec:
      containers:
        - env:
            - name: CONTROL_CENTER_BOOTSTRAP_SERVERS
              value: PLAINTEXT://kafka:9092
            - name: CONTROL_CENTER_CONNECT_CLUSTER
              value: http://kafka-connect:8083
            - name: CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS
              value: "1"
            - name: CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS
              value: "1"
            - name: CONTROL_CENTER_PORT
              value: "9021"
            - name: CONTROL_CENTER_REPLICATION_FACTOR
              value: "1"
            - name: CONTROL_CENTER_SCHEMA_REGISTRY_URL
              value: http://schema-registry:8081
            - name: CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS
              value: "2"
            - name: PORT
              value: "9021"
          image: confluentinc/cp-enterprise-control-center:latest
          name: flou-control-center
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9021
              hostPort: 9021
              protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "0.5"
              memory: "512Mi"
      hostname: flou-control-center
      restartPolicy: Always
status: {}
